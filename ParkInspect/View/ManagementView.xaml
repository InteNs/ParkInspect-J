<UserControl x:Class="ParkInspect.View.ManagementView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:oxy="http://oxyplot.org/wpf"
             xmlns:mapControl="clr-namespace:MapControl;assembly=MapControl.WPF"
             xmlns:maps="clr-namespace:ParkInspect.Maps"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             Foreground="Black"
             DataContext="{Binding Management, Source={StaticResource Locator}}">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="Converter"/>
        <mapControl:TileLayer x:Key="OpenStreetMap" SourceName="OpenStreetMap"
                       Description="Maps © [OpenStreetMap Contributors](http://www.openstreetmap.org/copyright)"
                       TileSource="http://{c}.tile.openstreetmap.org/{z}/{x}/{y}.png"
                       MaxZoomLevel="19"/>
        <Style x:Key="PointItemStyle" TargetType="mapControl:MapItem">
            <EventSetter Event="TouchDown" Handler="MapItemTouchDown"/>
            <Setter Property="Location" Value="{Binding Location}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="mapControl:MapItem">
                        <Canvas>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="labelBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                    <VisualState x:Name="MouseOver">
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <!--
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="selectedPath" Storyboard.TargetProperty="Opacity" To="0.7" Duration="0:0:0.1"/>
                                        </Storyboard>
                                        -->
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="selectedPath" Fill="White" Opacity="0">
                                <Path.Data>
                                    <EllipseGeometry RadiusX="15" RadiusY="15"/>
                                </Path.Data>
                            </Path>
                            <Path StrokeThickness="2" Fill="Transparent">
                                <Path.Stroke>
                                    <SolidColorBrush Color="Black"/>
                                </Path.Stroke>
                                <Path.Data>
                                    <EllipseGeometry RadiusX="8" RadiusY="8"/>
                                </Path.Data>
                            </Path>
                            <Grid Canvas.Left="15" Canvas.Top="-8">
                                <Rectangle x:Name="labelBackground" Fill="White" Opacity="1"/>
                                <maps:MapText Margin="1" OutlineThickness="1.5" Text="{Binding Description}"/>
                            </Grid>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Panel.ZIndex" Value="1"/>
                </Trigger>
                -->
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <TextBlock x:Name="MouseLocation" Margin="5" VerticalAlignment="Bottom" FontFamily="Segoe UI Mono"/>
        <StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Text="Soort diagram:" Grid.Row="1"/>
                <ComboBox Grid.Column="0"  Grid.Row="2" SelectedValue="{Binding SelectedDiagram}" ItemsSource="{Binding Diagrams}" DisplayMemberPath="Name" />
                <TextBlock Text="Inhoud:" Grid.Row="1" Grid.Column="1"/>
                <ComboBox Grid.Row="2" Grid.Column="1" ItemsSource="{Binding Options}" SelectedValue="{Binding SelectedOption}" />
            </Grid>
            <TextBlock Text="Filters:"/>
            <Grid Visibility="{Binding Date, Converter={StaticResource Converter}}">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <CheckBox Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Name="CheckBoxDatum" IsChecked="{Binding DateSelected}"/>
                <TextBlock Grid.Row="0" Grid.Column="1"  Text="Startdatum"/>
                <DatePicker Grid.Row="1" Grid.Column="1" SelectedDate="{Binding StartDate,Mode=TwoWay}" IsEnabled="{Binding ElementName=CheckBoxDatum, Path=IsChecked}"/>
                <TextBlock Grid.Row="0" Text="Einddatum" Grid.Column="2"/>
                <DatePicker Grid.Row="1" Grid.Column="2" SelectedDate="{Binding EndDate, Mode=TwoWay}" IsEnabled="{Binding ElementName=CheckBoxDatum, Path=IsChecked}" />
            </Grid>
            <Grid Visibility="{Binding Location, Converter={StaticResource Converter}, Mode=TwoWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" Name="CheckBoxLocatie"/>
                <TextBlock Grid.Column="1" Text="Locatie:"/>
                <ComboBox Grid.Column="2" IsEnabled="{Binding ElementName=CheckBoxLocatie, Path=IsChecked}" ItemsSource="{Binding Locations}" SelectedItem="{Binding SelectedRegion}" IsEnabledChanged="ComboBox_OnIsEnabledChanged"/>
            </Grid>
            <Grid Visibility="{Binding Inspector, Converter={StaticResource Converter}, Mode=TwoWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" Name="CheckBoxInspecteur"/>
                <TextBlock Grid.Column="1" Text="Inspecteur:"/>
                <ComboBox Grid.Column="2" IsEnabled="{Binding ElementName=CheckBoxInspecteur, Path=IsChecked}" ItemsSource="{Binding Inspectors}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedInspector}" IsEnabledChanged="ComboBox_OnIsEnabledChanged"/>
            </Grid>
            <Grid Visibility="{Binding Manager, Converter={StaticResource Converter}, Mode=TwoWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" Name="CheckBoxManager"/>
                <TextBlock Grid.Column="1" Text="Manager:"/>
                <ComboBox Grid.Column="2" IsEnabled="{Binding ElementName=CheckBoxManager, Path=IsChecked}" ItemsSource="{Binding Managers}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedManager}" IsEnabledChanged="ComboBox_OnIsEnabledChanged"/>
            </Grid>
            <Grid Visibility="{Binding Customer, Converter={StaticResource Converter}, Mode=TwoWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" Name="CheckBoxKlant"/>
                <TextBlock Grid.Column="1" Text="Klant:"/>
                <ComboBox Grid.Column="2" IsEnabled="{Binding ElementName=CheckBoxKlant, Path=IsChecked}" ItemsSource="{Binding Customers}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedCustomer}"  IsEnabledChanged="ComboBox_OnIsEnabledChanged"/>
            </Grid>
            <Grid Visibility="{Binding Commission, Converter={StaticResource Converter}, Mode=TwoWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" Name="CheckBoxOpdracht"/>
                <TextBlock Grid.Column="1" Text="Opdracht:"/>
                <ComboBox Grid.Column="2" IsEnabled="{Binding ElementName=CheckBoxOpdracht, Path=IsChecked}" ItemsSource="{Binding Commissions}" DisplayMemberPath="Description" SelectedItem="{Binding SelectedCommission}"  IsEnabledChanged="ComboBox_OnIsEnabledChanged"/>
            </Grid>
            <Grid Visibility="{Binding Function, Converter={StaticResource Converter}, Mode=TwoWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" Name="CheckBoxFunctie"/>
                <TextBlock Grid.Column="1" Text="Functie:"/>
                <ComboBox Grid.Column="2" IsEnabled="{Binding ElementName=CheckBoxFunctie, Path=IsChecked}" ItemsSource="{Binding Functions}" SelectedItem="{Binding SelectedFunction}"  IsEnabledChanged="ComboBox_OnIsEnabledChanged"/>
            </Grid>
            <Grid Visibility="{Binding Status, Converter={StaticResource Converter}, Mode=TwoWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" Name="CheckBoxStatus"/>
                <TextBlock Grid.Column="1" Text="Status:"/>
                <ComboBox Grid.Column="2" IsEnabled="{Binding ElementName=CheckBoxStatus, Path=IsChecked}" ItemsSource="{Binding Statuses}"  SelectedValue="{Binding SelectedStatus}"  IsEnabledChanged="ComboBox_OnIsEnabledChanged"/>
            </Grid>
            <Grid Visibility="{Binding Answer, Converter={StaticResource Converter}, Mode=TwoWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="110" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" Name="CheckBoxVraag"/>
                <TextBlock Grid.Column="1" Text="Antwoord op vraag:"/>
                <ComboBox Grid.Column="2" IsEnabled="{Binding ElementName=CheckBoxVraag, Path=IsChecked}" ItemsSource="{Binding Questions}" DisplayMemberPath="QuestionDescription" SelectedValue="{Binding SelectedQuestion}"  IsEnabledChanged="ComboBox_OnIsEnabledChanged"/>
                <TextBox Grid.Column="3" IsEnabled="{Binding ElementName=CheckBoxVraag, Path=IsChecked}" Text="{Binding SelectedAnswer}" IsEnabledChanged="TextBox_OnIsEnabledChanged"/>
            </Grid>
            <Button Content="Genereer diagram" Command="{Binding GenerateDiagramCommand}"  Width="150" HorizontalAlignment="Left"/>
        </StackPanel>
        <GridSplitter x:Name="GridSplitter" Grid.Column="1" HorizontalAlignment="Left" Height="370"  VerticalAlignment="Top" Width="5" />
        <GroupBox Header="Diagram" Grid.Column="0" Height="200" Margin="5,174,5,0">
            <oxy:PlotView Model="{Binding CurrentGraph.KPIModel}"/>
        </GroupBox>

        <mapControl:Map x:Name="map" ZoomLevel="{Binding Map.ZoomLevel}" MinZoomLevel="7" MaxZoomLevel="17" Center="{Binding Map.MapCenter}"
                 TileLayer="{StaticResource OpenStreetMap}"
                 MouseLeftButtonDown="MapMouseLeftButtonDown" MouseRightButtonDown="MapMouseRightButtonDown"
                 MouseMove="MapMouseMove" MouseLeave= "MapMouseLeave"
                 ManipulationInertiaStarting="MapManipulationInertiaStarting" Margin="10,9,10,10" Grid.Column="1">
            <mapControl:MapItemsControl ItemsSource="{Binding Map.Points}"
                                 ItemContainerStyle="{StaticResource PointItemStyle}"
                                 IsSynchronizedWithCurrentItem="True"
                                 SelectionMode="Extended"/>
        </mapControl:Map>
    </Grid>
</UserControl>